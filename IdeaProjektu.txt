System Kontroli Wersji
- darkhs

Zalozenia
- rozproszony(narazie lokalny:P)
- przechowuje info o repo w katalogu .darkhs
- tymczasowo uzytkownik musi byc w katalogu z .darkhs , pozniej sie to zmieni
- nie ma czegos takiego jak index w gicie(nie ma add - wszystko jest commitowane)

Struktura
	.darkhs -> glowny katalogu
		Plik HEAD -> plik z numerem obecnego commitu
		files -> w nim znajduja sie pliki
			NR gdzie NR >= 1 i w nim tresc
		commits -> w nim znajduja sie informacje o commitach
			Plik NR gdzie NR>=1
			    -> message commitu
				-> odwolanie do commitu poprzedniego(0 dla pierwszego)
				-> numer tree pliku gdzie sa info o plikach
		trees ->
			Plik NR gdzie NR to nummer drzewa NR >= 1
				-> [DIR|FILE]: sciezka_do_pliku [NR_PLIKU]
		branch ->
			CURRENT -> nazwa obecnego brancha ( lub numer commitu jezeli nie ma)
			inne branche np poczatkowy: master -> NR commitu

Mergowanie:
	-> tak generalnie bedzie polegalo na ustawieniu commitow z jednego brancha w drugim
		+ na ewentualny merge commit
		Mamy nastepujace sytuacje:
		Fast Forward
			B1= A -> B -> C -> D
			B2= A -> B -> C -> D -> E -> F
			B1 merge B2 = A -> B -> C -> D -> E -> F

			B1 = A -> B -> C -> D -> E -> F
			B2 = A -> B -> C -> D
			B1 merge B2 = nothing to merge

		3-way merge Rebase
			B1= A -> B -> C -> D
			B2= A -> B -> E -> F -> G -> H
			B1 merge B2 = A -> B -> E -> F -> G -> H -> C -> D

Znalezione bugi:
	-> gdy skopiujemy i wkleimy katalog w windows on przed kopia wstawia znak -- ktore
		polecenie status ma problem z wyswietleniem i wywala - do zrobienia
	-> wyswietlanie danych nie powinno obdbywac sie w RepositoryAction, za duzo tam
		wysokopoziomowej logiki aplikacji jest,powinno sie odbywac w oddzielnym module
		RepositoryPrettyPrint gdzie do wyswietlenia mozna by uzyc biblioteki
		Text.PrettyPrint i byloby elegancko
	-> branch nie wyswelta czy przeszedl na inny branch po poleceniu branch cos tam?
	-> nie wszystkie komendy wylapuja bledy - trzeba to zmienic